class Solution {
    public void gameOfLife(int[][] board) {
        int[] dx = {0,0,1,1,1,-1,-1,-1};
        int[] dy = {1,-1,1,-1,0,0,1,-1};

        int rows = board.length;
        int cols = board[0].length;

        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < cols; col++) {
                int count_live_neighbors = 0;

                for (int i = 0; i < 8; i++) {
                    int curr_x = row + dx[i];
                    int curr_y = col + dy[i];
                    if (isValidNeighbor(curr_x, curr_y, rows, cols) && Math.abs(board[curr_x][curr_y]) == 1)
                        count_live_neighbors++;
                }

                if (board[row][col] == 1 && (count_live_neighbors < 2 || count_live_neighbors > 3))
                    board[row][col] = -1;

                if (board[row][col] == 0 && count_live_neighbors == 3)
                    board[row][col] = 2;
            }
        }

        for (int row = 0; row < rows; row++) {
            for (int col = 0; col < cols; col++) {
                if (board[row][col] >= 1)
                    board[row][col] = 1;
                else
                    board[row][col] = 0;
            }
        }
    }

    private boolean isValidNeighbor(int x, int y, int rows, int cols) {
        return x >= 0 && x < rows && y >= 0 && y < cols;
    }
}
