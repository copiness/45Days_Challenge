/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> arr = new ArrayList<String>();
        if (root != null) {
            getpath(root, "", arr);
        }
        return arr;
    }
    
    private void getpath(TreeNode root, String path, List<String> arr) {
        if (root.left == null && root.right == null) { // If it's a leaf node
            arr.add(path + root.val);
        }
        if (root.left != null) {
            getpath(root.left, path + root.val + "->", arr);
        }
        if (root.right != null) {
            getpath(root.right, path + root.val + "->", arr);
        }
    }
}
